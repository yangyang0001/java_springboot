40亿 个不同的号码, 1G的内存 如果进行去重呢? 采用位数组的方式: 第n位表示等于n的数字存在, 经过计算是
        long bits   = 4000000000L;      // bits
        long bytes  = bits   / 8;       // Byte
        long kbytes = bytes  / 1024;    // KB
        long mbytes = kbytes / 1024;    // MB

        System.out.println("bits   = " + bits  );   // bits   = 4000000000
        System.out.println("bytes  = " + bytes );   // bytes  = 500000000 bytes
        System.out.println("kbytes = " + kbytes);   // kbytes = 488281
        System.out.println("mbytes = " + mbytes);   // mbytes = 476

64赛道 8赛道, 选出 4匹最快的马, 最少需要几轮: 11轮!

A1      B1      C1      D1      E1      F1      G1      H1

A2      B2      C2      D2      E2      F2      G2      H2

A3      B3      C3      D3      E3      F3      G3      H3

A4      B4      C4      D4      E4      F4      G4      H4


A5      B5      C5      D5      E5      F5      G5      H5
A6      B6      C6      D6      E6      F6      G6      H6
A7      B7      C7      D7      E7      F7      G7      H7
A8      B8      C8      D8      E8      F8      G8      H8




本篇内容包括如下模块：

高频算法题系列：链表

【🔥】【有真题】高频算法题系列：字符串
    快慢链表查找中间值: 参考 MiddleSearch.java
    链表是否为回环链表: 参考 PalindromeClient.java
    合并K个升序链表  : 参考 MergeClient.java
    翻转链表:


【🔥】【有真题】高频算法题系列：数组问题

高频算法题系列：二叉树

【🔥】高频算法题系列：排序算法

【🔥】高频算法题系列：二分查找

【🔥】高频算法题系列：动态规划

高频算法题系列：BFS

【🔥】高频算法题系列：栈

【🔥】高频算法题系列：DFS

【🔥】高频算法题系列：回溯算法

其中标🔥的部分代表非常高频的考题，其中不乏笔者遇到的原题。其中对于每一类，首先会列出包含的考题，然后针对每一道考题会给出难度、考察知识点、是否是面试真题，在每道题详细介绍时，还会给出每道题的 LeetCode 链接，帮助读者理解题意，以及能够进行实际的测验，还可以观看其他人的答案，更好的帮助准备。











