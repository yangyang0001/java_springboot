参考官网安装教程:
    下载地址
        https://www.mongodb.com/try/download/community

        本人使用 mongodb-linux-x86_64-rhel70-5.0.5.tgz

    安装教程
        https://docs.mongodb.com/guides/server/install/

    配置环境变量
        export PATH=/home/mongodb-linux-x86_64-rhel70-5.0.5/bin:$PATH

    启动命令
        mongod --dbpath=/home/mongodb-linux-x86_64-rhel70-5.0.5/data/db/
        mongod --dbpath=/home/mongodb-linux-x86_64-rhel70-5.0.5/data/db/ --logpath=/home/mongodb-linux-x86_64-rhel70-5.0.5/logs/mongodb.log --logappend


    配置启动命令:
        首先创建日志文件
            cd /home/mongodb-linux-x86_64-rhel70-5.0.5/
            mkdir logs
            cd logs
            vim mongodb.log
            保存即可!

        配置启动命令
            vim /etc/rc.local

            ## 加入如下内容
            mongod --dbpath=/home/mongodb-linux-x86_64-rhel70-5.0.5/data/db/ --logpath=/home/mongodb-linux-x86_64-rhel70-5.0.5/logs/mongodb.log --logappend
            mongod --dbpath=/home/mongodb-linux-x86_64-rhel70-5.0.5/data/db/ --logpath=/home/mongodb-linux-x86_64-rhel70-5.0.5/logs/mongodb.log --logappend

    专业DBA 启动时可能加上很多的参数, 这样会看起来非常的混乱, 这里采用配置文件的方式进行配置

        配置文件过程
            cd /home/mongodb-linux-x86_64-rhel70-5.0.5/
            vim mongodb.cnf     这里参考 mongodb.cnf 文件
            保存即可!

        启动命令
            cd /home/mongodb-linux-x86_64-rhel70-5.0.5/bin/
            mongod -f mongodb.cnf

            或者使用命令:

            cd /home/mongodb-linux-x86_64-rhel70-5.0.5/bin/
            mongod --config mongodb.cnf



    设置权限:
    // 创建一个 用户管理员用户
    use admin
    db.createUser({user : "root", pwd : "Yang199001", roles : [{role:"root", db : "admin"}]});

    // 创建单个数据库用户
    use mydb
    db.createUser({ user: "yangyang", pwd: "123456", roles: [{ role: "readWrite", db: "mydb"}]})

    user  : 用户名
    pwd   : 密码
    db    : 指定该用户的数据库, admin是用于权限控制的数据库, 如果没有需要新建一个
    roles : 指定用户的角色, 可以用一个空数组给新用户设定空角色；在roles字段,可以指定内置角色和用户定义的角色。role里的角色可以选 :
    
    Built-In Roles (内置角色) :
        1、数据库用户角色 : read、readWrite;
        2、数据库管理角色 : dbAdmin、dbOwner、userAdmin；
        3、集群管理角色 : clusterAdmin、clusterManager、clusterMonitor、hostManager；
        4、备份恢复角色 : backup、restore；
        5、所有数据库角色 : readAnyDatabase、readWriteAnyDatabase、userAdminAnyDatabase、dbAdminAnyDatabase
        6、超级用户角色 : root
        // 这里还有几个角色间接或直接提供了系统超级用户的访问 (dbOwner 、userAdmin、userAdminAnyDatabase)
        7、内部角色 : __system
    
    具体角色的功能
        Read : 允许用户读取指定数据库
        readWrite : 允许用户读写指定数据库
        dbAdmin : 允许用户在指定数据库中执行管理函数, 如索引创建、删除, 查看统计或访问system.profile
        userAdmin : 允许用户向system.users集合写入, 可以找指定数据库里创建、删除和管理用户
        clusterAdmin : 只在admin数据库中可用, 赋予用户所有分片和复制集相关函数的管理权限
        readAnyDatabase : 只在admin数据库中可用, 赋予用户所有数据库的读权限
        readWriteAnyDatabase : 只在admin数据库中可用, 赋予用户所有数据库的读写权限
        userAdminAnyDatabase : 只在admin数据库中可用, 赋予用户所有数据库的userAdmin权限
        dbAdminAnyDatabase : 只在admin数据库中可用, 赋予用户所有数据库的dbAdmin权限
        root : 只在admin数据库中可用, 超级账号, 超级权限


    查看所有用户列表:
        use admin
        db.system.users.find();